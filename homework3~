%Ryan Godfrey

%Prolog

jobs_ok(Assignment, Employees) :- noDupes(Assignment),
		    	       	  assignOK(Assignment, Employees).
		    

%true if the list contains no duplicate elements
noDupes(L) :- flatten(L, N),
	      is_set(N).

%findEmpSkills(+Name, +Employees, -Skills)
findEmpSkills(Name, [[Name | Skills] | _ ], Skills).
findEmpSkills(Name, [_ | T], Skills) :- findEmpSkills(Name, T, Skills).



doesPhone(Name, Employees) :- findEmpSkills(Name, Employees, X),
			      X = [1, _, _].
doesComp(Name, Employees) :- findEmpSkills(Name, Employees, X),
			     X = [_, 1, _].
doesNet(Name, Employees) :- findEmpSkills(Name, Employees, X),
			    X = [_, _, 1].


shiftOK([A,B,C,D], Employees) :- doesPhone(A, Employees),
				 doesPhone(B, Employees),
				 doesComp(C, Employees),
				 doesNet(D, Employees).

assignOK([], _).
assignOK([Shift |OtherShifts], Emloyees) :- shiftOK(Shift,Employees),
			       		    assignOK(OtherShifts, Employees).